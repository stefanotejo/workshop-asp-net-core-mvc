@model SalesWebMvc.Models.ViewModels.SellerFormViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>@ViewData["Title"]</h1>

<h4>Seller</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div> <!--This makes the validations requirements in the model appear as text. Only appears after one or more validations have failed(?)-->
            <div class="form-group">
                <label asp-for="Seller.Name" class="control-label"></label>
                <input asp-for="Seller.Name" class="form-control" />
                <span asp-validation-for="Seller.Name" class="text-danger"></span> <!-- This makes the specific validation requirements appear per relevant field. Also only when validation fails(?) -->
            </div>
            <div class="form-group">
                <label asp-for="Seller.Email" class="control-label"></label>
                <input asp-for="Seller.Email" class="form-control" />
                <span asp-validation-for="Seller.Email" class="text-danger"></span> <!-- This makes the specific validation requirements appear per relevant field. Also only when validation fails(?) -->
            </div>
            <div class="form-group">
                <label asp-for="Seller.BirthDate" class="control-label"></label>
                <input asp-for="Seller.BirthDate" class="form-control" />
                <span asp-validation-for="Seller.BirthDate" class="text-danger"></span> <!-- This makes the specific validation requirements appear per relevant field. Also only when validation fails(?) -->
            </div>
            <div class="form-group">
                <label asp-for="Seller.BaseSalary" class="control-label"></label>
                <input asp-for="Seller.BaseSalary" class="form-control" />
                <span asp-validation-for="Seller.BaseSalary" class="text-danger"></span> <!-- This makes the specific validation requirements appear per relevant field. Also only when validation fails(?) -->
            </div>
            <div class="form-group">
                <label asp-for="Seller.DepartmentId" class="control-label"></label>
                <select asp-for="Seller.DepartmentId" asp-items="@(new SelectList(Model.Departments, "Id", "Name"))" class="form-control"></select>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="Seller.Id" /> <!--This tells the passed value is to be compared to the Id field-->
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<!-- This below is the javascript side of the data validations (or better yet: client side) -->
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}